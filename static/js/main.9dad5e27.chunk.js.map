{"version":3,"sources":["actions/userActions.js","components/Header/Header.js","components/Header/Header.style.js","components/Topics/Topics.js","actions/topicActions.js","components/Topics/Topics.style.js","components/Projects/Projects.js","actions/projectActions.js","components/Projects/Projects.style.js","components/Teams/Teams.js","actions/teamActions.js","components/Teams/Teams.style.js","helpers/validate.js","components/LoginPage/LoginPage.js","components/LoginPage/LoginPage.style.js","helpers/changeDateFormat.js","components/RegisterPage/RegisterPage.js","components/RegisterPage/RegisterPage.style.js","components/Profile/Profile.js","components/Profile/Profile.style.js","App.js","serviceWorker.js","reducers/rootReducer.js","store/configureStore.js","index.js"],"names":["URL","setCurrentUser","user","type","Header","state","loggedIn","handleLogOut","_this","props","logOut","JSON","stringify","localStorage","getItem","removeItem","_this2","this","classes","MenuItems","currentUser","email","react_default","a","createElement","Fragment","react_router_dom","to","key","uuid","className","menuItem","onClick","AccountCircleSharp_default","AppBar","position","Toolbar","header","icon","IconButton","edge","color","aria-label","GroupWork_default","Typography","variant","noWrap","menuItems","Component","connect","dispatch","token","fetch","concat","headers","then","res","json","withStyles","display","justifyContent","flexDirection","alignItems","textDecoration","margin","Topics","getTopics","parse","_this$props","topics","title","map","topic","Card","root","details","CardContent","content","component","votingsCount","width","textAlign","Projects","getProjects","projects","project","projectTitle","descAndVotes","description","padding","background","& h5","fontSize","Teams","getTeams","teams","console","log","team","teamTitle","name","teamContent","projectAndTopic","teamMembers","members","member","firstName","lastName","validEmailRegex","RegExp","validImgRegex","validateFormFields","userDetails","errors","Object","keys","forEach","value","match","test","length","password","sex","avatarUrl","companyId","js","react","birdthDate","LoginPage","handleChange","e","_e$target","target","setState","objectSpread","defineProperty","handleSubmit","login","react_router","form","noValidate","autoComplete","formFields","TextField","formField","required","id","label","onChange","error","helperText","Button","loginButton","method","Content-Type","body","response","status","Error","statusText","setItem","marginTop","& div","changeDateFormat","date","month","getMonth","day","getDate","getFullYear","RegisterPage","jsExperience","reactExperience","birthDate","Date","now","event","_event$target","handleBirthDateChange","preventDefault","entries","data","registerUser","dateField","react_datepicker_min_default","dataPicker","selected","sexAndCompany","FormControl","sexForm","InputLabel","Select","labelId","MenuItem","numberField","InputLabelProps","shrink","registerButton","userData","border","minWidth","verticalAlign","& label","marginRight","& input","font","height","boxSizing","animationName","letterSpacing","animationDuration","borderRadius","Profile","CardActionArea","CardMedia","avatar","alt","image","profileDetails","gutterBottom","fullName","CardActions","editUser","size","& button","App","getUsers","basename","components_Header_Header","path","components_Topics_Topics","components_Projects_Projects","components_Teams_Teams","components_LoginPage_LoginPage","components_RegisterPage_RegisterPage","components_Profile_Profile","Boolean","window","location","hostname","initialstate","serverError","userReducer","arguments","undefined","action","enhancer","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9dad5e27.chunk.js","sourcesContent":["export const SET_CURRENT_USER = 'set_current_user';\r\nexport const SET_SERVER_ERROR ='SET_SERVER_ERROR';\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\nconst URL = 'https://picsart-bootcamp-2020-api.herokuapp.com/api/v1'\r\n\r\nexport const setCurrentUser = user => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        user\r\n    }\r\n}\r\n\r\nexport const setUserLogOut = () => {\r\n    return {\r\n        type: LOG_OUT\r\n    }\r\n}\r\nexport const getUsers = (token) => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/users`, {\r\n            headers: {\r\n                token: token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch(setCurrentUser(res))\r\n        )\r\n    }\r\n}\r\n\r\nexport const logOut = (token) => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/users/logout`, {\r\n            headers: {\r\n                token: token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(dispatch(setUserLogOut())\r\n        )\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => {\r\n    \r\n    return dispatch => {\r\n        fetch(`${URL}/users/login`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email:email, password:password})\r\n        })\r\n        .then(response =>  {\r\n            if(response.status !== 200){\r\n                throw Error(response.statusText)\r\n            } \r\n            return response.json();\r\n        })\r\n        .then(user => {\r\n            dispatch(setCurrentUser(user))\r\n            localStorage.setItem('token', JSON.stringify(user.token));\r\n        })\r\n    }\r\n}\r\n\r\nexport const  registerUser = userData => {\r\n    return () => {\r\n        fetch(`${URL}/users/register`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify(userData)\r\n        })\r\n        .then(response =>  {\r\n            if(response.status !== 200){\r\n              throw Error(response.statusText)\r\n            }\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport const setServerError = error => {\r\n    return {\r\n        type: SET_SERVER_ERROR,\r\n        error\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport  {Link} from 'react-router-dom'\r\nimport uuid from 'react-uuid';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GroupWorkIcon from '@material-ui/icons/GroupWork';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AccountCircleSharpIcon from '@material-ui/icons/AccountCircleSharp';\r\n\r\nimport {logOut} from '../../actions/userActions';\r\n\r\nimport {styles} from './Header.style';\r\nimport {withStyles} from '@material-ui/core';\r\n\r\n\r\n\r\nclass Header extends Component{\r\n  state = {\r\n    loggedIn: false\r\n  }\r\n\r\n  handleLogOut = () => {\r\n    this.props.logOut(JSON.stringify(localStorage.getItem('token')));\r\n    localStorage.removeItem('token')\r\n  }\r\n  render(){\r\n\r\n  \r\n    const {classes} = this.props;\r\n\r\n    const MenuItems = () => {\r\n      if(this.props.currentUser.email){\r\n        return (\r\n          <>\r\n            <Link \r\n              to='/teams' \r\n              key={uuid()}\r\n              className={classes.menuItem}\r\n            >\r\n              Teams\r\n           </Link>\r\n           <Link \r\n              to='/topics' \r\n              key={uuid()}\r\n              className={classes.menuItem}\r\n            >\r\n              Topics\r\n           </Link>\r\n           <Link \r\n              to='/projects' \r\n              key={uuid()}\r\n              className={classes.menuItem}\r\n            >\r\n              Projects\r\n           </Link>\r\n           <Link \r\n              to='/' \r\n              key={uuid()}\r\n              className={classes.menuItem}\r\n              onClick={this.handleLogOut}\r\n            >\r\n              Log out\r\n           </Link>\r\n            <Link \r\n              to='/profile' \r\n              key={uuid()}\r\n              className={classes.menuItem}\r\n            >\r\n              <AccountCircleSharpIcon />\r\n            </Link>\r\n            \r\n          </>\r\n        )\r\n      } else {\r\n        return (\r\n          <>\r\n            <Link \r\n              to='/login' \r\n              key={uuid()}\r\n              className={classes.menuItem}\r\n            >\r\n            Log in\r\n            </Link>\r\n            <Link \r\n                to='/register' \r\n                key={uuid()}\r\n                className={classes.menuItem}\r\n              >\r\n              Register\r\n          </Link>\r\n        </>\r\n        )\r\n      }\r\n        \r\n      \r\n    }\r\n    \r\n    return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.header}>\r\n          <div className={classes.icon}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n            >\r\n              <GroupWorkIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              TeamBuilder\r\n            </Typography>\r\n          </div>\r\n          \r\n          <div className={classes.menuItems}>\r\n            <MenuItems />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      logOut: (token) => dispatch(logOut(token)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Header));","export const styles = {\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    icon: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center'\r\n    },\r\n    menuItem: {\r\n        textDecoration: 'none',\r\n        color: 'white',\r\n        margin: '0 15px'\r\n    },\r\n    menuItems: {\r\n        display: 'flex'\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport uuid from 'react-uuid'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {getTopics} from '../../actions/topicActions'\r\n\r\nimport {styles} from './Topics.style';\r\nimport {withStyles} from '@material-ui/core';\r\n\r\nclass Topics extends Component{\r\n    componentDidMount(){\r\n        this.props.getTopics(JSON.parse(localStorage.getItem('token')));\r\n    }\r\n\r\n    render(){\r\n        const {classes, topics} = this.props\r\n\r\n        return (\r\n            <div>\r\n                <h2 className={classes.title}>Topics</h2>\r\n                {topics.map(topic => {\r\n                    return (\r\n                        <Card className={classes.root} key={uuid()}>\r\n                            <div className={classes.details}>\r\n                                <CardContent className={classes.content}>\r\n                                    <Typography component=\"h5\" variant=\"h5\">\r\n                                        {topic.title}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Votes: {topic.votingsCount}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </div>\r\n                        </Card>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      topics: state.topics\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTopics: token => dispatch(getTopics(token)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Topics));","const URL = 'https://picsart-bootcamp-2020-api.herokuapp.com/api/v1';\r\nexport const SET_TOPICS = 'SET_TOPICS';\r\n\r\nexport const setTopics = topics => {\r\n    return {\r\n        type: SET_TOPICS,\r\n        topics: topics\r\n    }\r\n}\r\n\r\nexport const getTopics = (token) => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/topics`, {\r\n            headers: {\r\n                token: token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch(setTopics(res)))\r\n    }\r\n}","export const styles = {\r\n    root: {\r\n        width:500,\r\n        margin: '10px auto'\r\n    },\r\n    details: {\r\n\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    title: {\r\n        width:500,\r\n        textAlign: 'center',\r\n        margin: '40px auto'\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport uuid from 'react-uuid'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {getProjects} from '../../actions/projectActions';\r\n\r\nimport {styles} from './Projects.style';\r\nimport {withStyles} from '@material-ui/core';\r\n\r\nclass Projects extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.getProjects(JSON.parse(localStorage.getItem('token')));\r\n    }\r\n\r\n    render(){\r\n        const {classes, projects} = this.props\r\n\r\n        return (\r\n            <div>\r\n                <h2 className={classes.title}>Projects</h2>\r\n                {projects.map(project => {\r\n                    return (\r\n                        <Card className={classes.root} key={uuid()}>\r\n                            <div className={classes.details} >\r\n                                <CardContent className={classes.content}>\r\n                                    <div className={classes.projectTitle}>\r\n                                        <Typography component=\"h5\" variant=\"h5\">\r\n                                            {project.title}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className={classes.descAndVotes}>\r\n                                        <Typography className={classes.description}>\r\n                                            {project.description}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            Votes: {project.votingsCount}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    \r\n                                </CardContent>\r\n                            </div>\r\n                        </Card>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      projects: state.projects\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getProjects: token => dispatch(getProjects(token)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Projects));","const URL = 'https://picsart-bootcamp-2020-api.herokuapp.com/api/v1';\r\nexport const SET_PROJECTS = 'SET_PROJECTS';\r\n\r\nexport const setProjects = projects => {\r\n    return {\r\n        type: SET_PROJECTS,\r\n        projects: projects\r\n    }\r\n}\r\n\r\nexport const getProjects = (token) => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/projects`, {\r\n            headers: {\r\n                token: token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch(setProjects(res)))\r\n    }\r\n}","export const styles = {\r\n    root: {\r\n        width:800,\r\n        margin: '10px auto',\r\n        padding:0\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        alignItems: 'stretch',\r\n        justifyContent: 'space-between',\r\n        padding: '0!important'\r\n    },\r\n    title: {\r\n        width:500,\r\n        textAlign: 'center',\r\n        margin: '40px auto',\r\n    },\r\n    description: {\r\n        padding:'20px 40px 20px'\r\n    },\r\n    descAndVotes: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '20px'\r\n    },\r\n    projectTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding:20,\r\n        background: '#3f51b5',\r\n        '& h5': {\r\n            width:110,\r\n            color: 'white',\r\n            fontSize: 20\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport uuid from 'react-uuid'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {getTeams} from '../../actions/teamActions';\r\n\r\nimport {styles} from './Teams.style';\r\nimport {withStyles} from '@material-ui/core';\r\n\r\nclass Teams extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.getTeams(JSON.parse(localStorage.getItem('token')));\r\n    }\r\n\r\n    render(){\r\n        const {classes, teams} = this.props\r\n\r\n        return (\r\n            <div>\r\n                {console.log(teams)}\r\n                <h2 className={classes.title}>Teams</h2>\r\n                {teams.map(team => {\r\n                    return (\r\n                        <Card className={classes.root} key={uuid()}>\r\n                            <div className={classes.details} >\r\n                                <CardContent className={classes.content}>\r\n                                    <div className={classes.teamTitle}>\r\n                                        <Typography component=\"h5\" variant=\"h5\">\r\n                                            {team.name}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className={classes.teamContent}>\r\n                                        <div className={classes.projectAndTopic}>\r\n                                            <Typography className={classes.description}>\r\n                                            Project:  {team.project}\r\n                                            </Typography>\r\n                                            <Typography>\r\n                                                Topic: {team.topic}\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <div className={classes.teamMembers}>\r\n                                        {\r\n                                            team.members.map(member => {\r\n                                                return (\r\n                                                    <Typography>\r\n                                                        {member.firstName} {member.lastName}\r\n                                                    </Typography>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </CardContent>\r\n                            </div>\r\n                        </Card>\r\n\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      teams: state.teams\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getTeams: token => dispatch(getTeams(token)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Teams));","const URL = 'https://picsart-bootcamp-2020-api.herokuapp.com/api/v1';\r\nexport const SET_TEAMS = 'SET_TEAMS';\r\n\r\nexport const setTeams = teams => {\r\n    return {\r\n        type: SET_TEAMS,\r\n        teams: teams\r\n    }\r\n}\r\n\r\nexport const getTeams = (token) => {\r\n    return (dispatch) => {\r\n        fetch(`${URL}/teams`, {\r\n            headers: {\r\n                token: token,\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => dispatch(setTeams(res)))\r\n    }\r\n}","export const styles = {\r\n    root: {\r\n        width:800,\r\n        margin: '10px auto',\r\n        // padding:0\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n        // alignItems: 'stretch',\r\n        // justifyContent: 'space-between',\r\n        // padding: '0!important'\r\n    },\r\n    title: {\r\n        width:500,\r\n        textAlign: 'center',\r\n        margin: '40px auto',\r\n    },\r\n    description: {\r\n        // padding:'20px 40px 20px'\r\n    },\r\n    teamContent: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        padding: '20px'\r\n    },\r\n    teamTitle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding:20,\r\n        background: '#3f51b5',\r\n        '& h5': {\r\n            // width:110,\r\n            color: 'white',\r\n            fontSize: 20\r\n        }\r\n    },\r\n    projectAndTopic: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}","export const validEmailRegex = RegExp(\r\n    /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n  );\r\n\r\nconst validImgRegex = RegExp(/(https?:\\/\\/.*\\.(?:png|jpg))/i);\r\n\r\nexport const validateFormFields = userDetails => {\r\n\r\n    let errors = {};\r\n    \r\n    Object.keys(userDetails).forEach(name => {\r\n        let value = userDetails[name];\r\n        switch (name) {\r\n            case 'firstName': \r\n                if(!value.match(/^[a-zA-Z]+$/)){\r\n                    errors.firstName = 'name shouldn\\'t be empty and  can contain only letters'\r\n                }\r\n              break;\r\n              case 'lastName': \r\n                if(!value.match(/^[a-zA-Z]+$/)){\r\n                    errors.lastName = 'last name shouldn\\'t be empty and  can contain only letters'\r\n                }\r\n              break;\r\n            case 'email': \r\n                if(!validEmailRegex.test(value)){\r\n                    errors.email = 'Email is not valid!'\r\n                }\r\n              break;\r\n            case 'password': \r\n                if(value.length < 8){\r\n                    errors.password = 'Password must be at least 8 characters long!'\r\n                }\r\n              break;\r\n              case 'sex': \r\n                if(value.length < 1){\r\n                    errors.sex = 'please select your sex'\r\n                }\r\n              break;\r\n              case 'avatarUrl': \r\n                if(!validImgRegex.test(value)){\r\n                    errors.avatarUrl = 'avatar should pe in .jpg or .png format'\r\n                }\r\n              break;\r\n              case 'companyId': \r\n              \r\n                if(value.length < 1){\r\n                    errors.companyId = 'please select company'\r\n                }\r\n              break;\r\n              case 'jsExperience':  \r\n                if(!value.length || value.length < 1 || value < 0){\r\n                    errors.js = 'please type your js experience'\r\n                }\r\n              break;\r\n              case 'reactExperience': \r\n                if(!value.length || value.length < 1 || value < 0){\r\n                    errors.react = 'please type your react experience'\r\n                }\r\n              break;\r\n              case 'birdthDate': \r\n                if(value.length < 1){\r\n                    errors.birdthDate = 'select your birdth date'\r\n                }\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    })\r\n\r\n    return errors;\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport {validEmailRegex} from '../../helpers/validate';\r\n\r\nimport {login} from '../../actions/userActions';\r\nimport {styles} from './LoginPage.style';\r\nimport {withStyles} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginPage extends Component{\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    errors: []\r\n  }\r\n\r\n  handleChange = e => {\r\n    const {name, value } = e.target;\r\n    this.setState({...this.state, [name]: value})\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const validEmail = validEmailRegex.test(this.state.email)\r\n\r\n    if(validEmail) {\r\n      this.props.login(this.state.email, this.state.password);\r\n    } \r\n    else {\r\n      this.setState({...this.state, errors: 'email is not valid'})\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    const {classes} = this.props;\r\n    \r\n    if(this.props.currentUser.email){\r\n      return (\r\n        <Redirect to='/'></Redirect>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className={classes.form}>\r\n        <Typography variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <div className={classes.formFields}>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                required\r\n                id=\"outlined-required\"\r\n                name=\"email\"\r\n                label=\"email\"\r\n                variant=\"outlined\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.length > 0 ? true : false}\r\n                helperText={this.state.errors}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                id=\"outlined-password-input\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              className={classes.loginButton}\r\n              onClick={e => this.handleSubmit(e)}\r\n            >\r\n              sign in\r\n            </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProprs = (dispatch) => {\r\n  return {\r\n    login: (email, password) => dispatch(login(email, password)),\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProprs)(withStyles(styles)(LoginPage));\r\n","export const styles = {\r\n    form : {\r\n        margin: 'auto',\r\n        textAlign: 'center',\r\n        marginTop:40\r\n      },\r\n      formFields: {\r\n        width:400,\r\n        display:'flex',\r\n        flexDirection: 'column',\r\n        marginTop:40,\r\n        margin: 'auto',\r\n        '& div': {\r\n          // width: 500\r\n        }\r\n      },\r\n      formField: {\r\n        margin: '10px 0',\r\n        width:400\r\n      },\r\n      loginButton: {\r\n        margin: '20px 0 80px 0',\r\n        padding: '8px 20px'\r\n      }\r\n}","export const changeDateFormat =  date => {\r\n    const month = (date.getMonth() + 1 + '').length < 2 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\r\n    const day = date.getDate().length < 2 ? '0' + date.getDate() : date.getDate();\r\n    return (date.getFullYear() + \"-\" + (month) + \"-\" + day);\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {registerUser} from '../../actions/userActions';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DatePicker from 'react-datepicker';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport {changeDateFormat} from '../../helpers/changeDateFormat';\r\nimport {validateFormFields} from '../../helpers/validate';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {styles} from './RegisterPage.style';\r\nimport {withStyles} from '@material-ui/core';\r\n\r\nclass RegisterPage extends Component{\r\n  state = {\r\n    userDetails: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      sex: '',\r\n      avatarUrl: '',\r\n      jsExperience: '',\r\n      reactExperience: '',\r\n      companyId: '',\r\n      birthDate: Date.now(),\r\n    },\r\n    errors: {}\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const {name, value} = event.target;\r\n\r\n    this.setState({...this.state, userDetails: {...this.state.userDetails, [name]: value}});\r\n  }\r\n\r\n  handleBirthDateChange = date => {\r\n    this.setState({...this.state, userDetails: {...this.state.userDetails, birthDate: date}})\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const errors = validateFormFields(this.state.userDetails)\r\n\r\n    this.setState({...this.state, errors: errors});\r\n    \r\n    if(Object.entries(errors).length === 0) {\r\n      const birthDate = changeDateFormat(this.state.userDetails.birthDate)\r\n      const data = this.state.userDetails;\r\n      data.birthDate = birthDate;\r\n      data.jsExperience = +data.jsExperience;\r\n      data.reactExperience = +data.reactExperience;\r\n      this.props.registerUser(data)\r\n    }else{\r\n      console.error('20')\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {classes} = this.props;\r\n\r\n    if(this.props.currentUser.email){\r\n      return (\r\n        <Redirect to='/'></Redirect>\r\n      )\r\n    }\r\n    return (\r\n      <div className={classes.form}>\r\n        <Typography variant='h5'>\r\n          Register\r\n        </Typography>\r\n        <form className={classes.root} noValidate autoComplete=\"off\">\r\n          <div className={classes.formFields}>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                required\r\n                error={this.state.errors.email? true : false}\r\n                id=\"outlined-required\"\r\n                name=\"email\"\r\n                label=\"email\"\r\n                variant=\"outlined\"\r\n                value={this.state.userDetails.email}\r\n                onChange={this.handleChange}\r\n                helperText={this.state.errors.email}\r\n\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                id=\"outlined-password-input\"\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                value={this.state.userDetails.password}\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.password ? true : false}\r\n                helperText={this.state.errors.password}\r\n\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                required\r\n                id=\"outlined-required\"\r\n                name=\"firstName\"\r\n                label=\"first name\"\r\n                variant=\"outlined\"\r\n                value={this.state.userDetails.firstName}\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.firstName ? true : false}\r\n                helperText={this.state.errors.firstName}\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"last name\"\r\n                name=\"lastName\"\r\n                variant=\"outlined\"\r\n                value={this.state.userDetails.lastName}\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.lastName ? true : false}\r\n                helperText={this.state.errors.lastName}\r\n              />\r\n            </div>\r\n            <div className={classes.dateField}>\r\n              <label>Birdth date:</label>\r\n              <DatePicker \r\n                name=\"birthdate\"\r\n                className={classes.dataPicker}\r\n                selected={this.state.userDetails.birthDate} \r\n                onChange={date => this.handleBirthDateChange(date)}\r\n                />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                className={classes.formField}\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"avatar url\"\r\n                name=\"avatarUrl\"\r\n                variant=\"outlined\"\r\n                value={this.state.userDetails.avatarUrl}\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.avatarUrl ? true : false}\r\n                helperText={this.state.errors.avatarUrl}\r\n              />\r\n            </div>\r\n            <div className={classes.sexAndCompany}>\r\n              <FormControl \r\n                variant=\"outlined\" \r\n                className={classes.sexForm} \r\n                required                 \r\n                error={this.state.errors.sex ? true : false}\r\n\r\n              >\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Sex</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={this.state.userDetails.sex}\r\n                  onChange={this.handleChange}\r\n                  label=\"Sex\"\r\n                  name=\"sex\"\r\n                >\r\n                  <MenuItem value='male'>male</MenuItem>\r\n                  <MenuItem value='female'>female</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl \r\n                variant=\"outlined\" \r\n                className={classes.companyId}  \r\n                required \r\n                error={this.state.errors.companyId ? true : false}\r\n\r\n              > \r\n                <InputLabel id=\"demo-simple-select-outlined-label\">Company ID</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={this.state.userDetails.companyId}\r\n                  name=\"companyId\"\r\n                  onChange={this.handleChange}\r\n                  label=\"Company ID\"\r\n                >\r\n                  <MenuItem value={1}>1</MenuItem>\r\n                  <MenuItem value={2}>2</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className={classes.numberField}>\r\n              <TextField\r\n                required\r\n                id=\"outlined-number\"\r\n                label=\"Js experience (months)\"\r\n                name=\"jsExperience\"\r\n                type=\"number\"\r\n                value={this.state.userDetails.jsExperience}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.js ? true : false}\r\n                helperText={this.state.errors.js}\r\n              />\r\n              <TextField\r\n                required\r\n                id=\"outlined-number\"\r\n                label=\"React experience (months)\"\r\n                name=\"reactExperience\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={this.state.userDetails.reactExperience}\r\n                variant=\"outlined\"\r\n                onChange={this.handleChange}\r\n                error={this.state.errors.react ? true : false}\r\n                helperText={this.state.errors.react}\r\n              />\r\n            </div>\r\n            <div>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              className={classes.registerButton}\r\n              onClick={e => this.handleSubmit(e)}\r\n            >\r\n              Register\r\n            </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nconst mapDispatchToProprs = (dispatch) => {\r\n  return {\r\n    registerUser: (data) => dispatch(registerUser(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProprs)(withStyles(styles)(RegisterPage));\r\n","export const styles = {\r\n  form : {\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    marginTop:40\r\n  },\r\n  formFields: {\r\n    width:500,\r\n    display:'flex',\r\n    flexDirection: 'column',\r\n    marginTop:40,\r\n    margin: 'auto',\r\n    '& div': {\r\n      // width: 500\r\n    }\r\n  },\r\n  formField: {\r\n    margin: '10px 0',\r\n    width: 500\r\n  },\r\n  dataPicker: {\r\n    width: '100%'\r\n  },\r\n  dateField: {\r\n    border: 0,\r\n    margin: '10px 0',\r\n    display: 'inline-flex',\r\n    padding: 0,\r\n    position: 'relative',\r\n    minWidth: 0,\r\n    width: '100%',\r\n    // flexDirection: 'column',\r\n    verticalAlign: 'top',\r\n    '& label': {\r\n      marginRight:20\r\n    },\r\n    '& input': {\r\n      font: 'inherit',\r\n      color: 'currentColor',\r\n      height: '3.6em',\r\n      margin: 0,\r\n      display: 'block',\r\n      minWidth: 0,\r\n      background: 'none',\r\n      boxSizing: 'border-box',\r\n      animationName: 'mui-auto-fill-cancel',\r\n      letterSpacing: 'inherit',\r\n      animationDuration: '10ms',\r\n      border: '1px solid rgba(0, 0, 0, 0.12)',\r\n      borderRadius:4,\r\n      padding: '18.5px 14px',\r\n      width:440,\r\n    }\r\n  },\r\n  sexForm:{\r\n    width:222,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  companyId: {\r\n    width:222,\r\n    display: 'flex',\r\n    justifyContent: 'flex-start'\r\n  },\r\n  sexAndCompany: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  numberField: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '10px 0',\r\n    width:'100%'\r\n  },\r\n  registerButton: {\r\n    margin: '40px 0 80px 0',\r\n    padding: '10px 30px'\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {styles} from './Profile.style';\r\nimport {withStyles} from '@material-ui/core';\r\n\r\nclass Profile extends Component{\r\n\r\n    render(){\r\n        const {classes, currentUser} = this.props;\r\n        \r\n        return (\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.avatar}\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"140\"\r\n                    image={currentUser.avatarUrl}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent className={classes.profileDetails}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.fullName}>\r\n                    {currentUser.firstName} {currentUser.lastName}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    email: {currentUser.email}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    sex: {currentUser.sex}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Birth date: {currentUser.sex}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Js Experience: {currentUser.sex}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    React Experience: {currentUser.sex}\r\n                </Typography>\r\n              \r\n                </CardContent>\r\n                </CardActionArea>\r\n                <CardActions className={classes.editUser}>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                        Edit details\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    } \r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.currentUser\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Profile));","export const styles = {\r\n    root: {\r\n        width:500,\r\n        margin:'auto',\r\n        marginTop: 80,\r\n        display: 'flex',\r\n    },\r\n    avatar: {\r\n        height: '100%',\r\n        width: 200,\r\n        margin: 'auto',\r\n        marginTop:20,\r\n        borderRadius: '50%'\r\n    },\r\n    fullName: {\r\n        textAlign: 'center'\r\n    },\r\n    profileDetails: {\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: 'auto',\r\n    },\r\n    editUser: {\r\n        background: '#3f51b5',\r\n        '& button': {\r\n            color: 'white'\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {HashRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getUsers} from './actions/userActions';\r\n\r\nimport Header from './components/Header/Header';\r\nimport Topics from './components/Topics/Topics';\r\nimport Projects from './components/Projects/Projects';\r\nimport Teams from './components/Teams/Teams';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport RegisterPage from './components/RegisterPage/RegisterPage'\r\nimport Profile from './components/Profile/Profile'\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount(){\r\n    if(localStorage.getItem('token')){\r\n      this.props.getUsers(JSON.parse(localStorage.getItem('token')));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <HashRouter basename='/'>\r\n        {!this.props.currentUser.email && (\r\n          <Redirect to='/login' />\r\n        )}\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/topics'>\r\n            <Topics />\r\n          </Route>\r\n          <Route path='/projects'>\r\n            <Projects />\r\n          </Route>\r\n          <Route path='/teams'>\r\n            <Teams />\r\n          </Route>\r\n          <Route path='/login'>\r\n            <LoginPage />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <RegisterPage />\r\n          </Route>\r\n          <Route path=\"/profile\">\r\n             <Profile />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      getUsers: (token) => dispatch(getUsers(token)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {SET_CURRENT_USER, SET_SERVER_ERROR, LOG_OUT} from '../actions/userActions';\r\nimport {SET_TOPICS} from '../actions/topicActions';\r\nimport {SET_PROJECTS} from '../actions/projectActions';\r\nimport {SET_TEAMS} from '../actions/teamActions';\r\n\r\nconst initialstate = {\r\n    currentUser:{},\r\n    serverError: '',\r\n    topics: [],\r\n    projects: [],\r\n    teams: []\r\n}\r\nconst userReducer = (state =  initialstate, action) => {\r\n    console.log('enter', state, action);\r\n    switch(action.type){\r\n        case SET_CURRENT_USER : \r\n            return {\r\n                ...state, currentUser: action.user \r\n            }\r\n        case LOG_OUT : \r\n            return {\r\n                 ...state, currentUser: {}\r\n            }\r\n        case SET_SERVER_ERROR:\r\n            return {\r\n                ...state, serverError: action.error\r\n            }\r\n        case SET_TOPICS: \r\n            return {\r\n                ...state, topics: action.topics\r\n            }\r\n        case SET_PROJECTS: \r\n            return {\r\n                ...state, projects: action.projects\r\n            }\r\n        case SET_TEAMS: \r\n            return {\r\n                ...state, teams: action.teams\r\n            }\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\nexport default userReducer;\r\n\r\n\r\n\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducer from '../reducers/rootReducer';\r\n\r\nconst enhancer = applyMiddleware(thunk);\r\n\r\nexport const store = createStore(reducer, enhancer)\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {Provider} from 'react-redux'\r\n\r\nimport {store} from './store/configureStore';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}